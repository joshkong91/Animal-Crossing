filter(!is.na(movie_rating)) %>%
mutate(movie_rating = fct_lump(movie_rating,5)) %>%
lm(review_rating~movie_rating, data = .) %>%
anova()
#it appears that the movie_rating is significant in determining the review rating of a movie
# Chunk 7
#some of the movies are separated by " |".
#I'm going to unnest this and separate the rows. Many movies will be duplicated with a different genre as a result
horror_movies %>%
separate_rows(genres, sep = "\\| ") %>%
mutate(genres = fct_lump(genres,5),
genres = fct_reorder(genres,review_rating,
na.rm = TRUE)) %>%
ggplot(aes(genres, review_rating))+
geom_boxplot()+
coord_flip()
horror_movies %>%
separate_rows(genres,sep = "\\| ") %>%
mutate(genres = fct_lump(genres,5)) %>%
lm(review_rating~ genres, data = .) %>%
anova()
# Chunk 8
library(tidytext)
horror_movies_unnested <- horror_movies %>%
unnest_tokens(word,plot) %>%
anti_join(stop_words, by = "word")
horror_movies_unnested %>%
filter(!is.na(review_rating)) %>%
group_by(word) %>%
summarise(movies = n(),
avg_rating = mean(review_rating)) %>%
arrange(desc(movies)) %>%
filter(movies >= 100) %>%
mutate(word = fct_reorder(word, avg_rating)) %>%
ggplot(aes(word, avg_rating))+
geom_point() +
coord_flip()
library(glmnet)
library(Matrix)
movie_word_matrix <- horror_movies_unnested %>%
filter(!is.na(review_rating)) %>%
add_count(word) %>%
filter(n >= 20) %>%
count(title,word) %>%
cast_sparse(title,word,n)
rating <- horror_movies$review_rating[match(rownames(movie_word_matrix),horror_movies$title)]
lasso_model <- cv.glmnet(movie_word_matrix,rating)
tidy(lasso_model$glmnet.fit) %>%
filter(lambda == lasso_model$lambda.min,
term != "(Intercept)") %>%
mutate(term = fct_reorder(term,estimate)) %>%
ggplot(aes(term,estimate,fill = estimate > 0))+
geom_col() +
coord_flip()+
theme(legend.position = "none")
movie_word_matrix <- horror_movies_unnested %>%
filter(!is.na(review_rating)) %>%
add_count(word) %>%
filter(n >= 30) %>%
count(title,word) %>%
cast_sparse(title,word,n)
rating <- horror_movies$review_rating[match(rownames(movie_word_matrix),horror_movies$title)]
lasso_model <- cv.glmnet(movie_word_matrix,rating)
tidy(lasso_model$glmnet.fit) %>%
filter(lambda == lasso_model$lambda.min,
term != "(Intercept)") %>%
mutate(term = fct_reorder(term,estimate)) %>%
ggplot(aes(term,estimate,fill = estimate > 0))+
geom_col() +
coord_flip()+
theme(legend.position = "none")
movie_word_matrix <- horror_movies_unnested %>%
filter(!is.na(review_rating)) %>%
add_count(word) %>%
filter(n >= 25) %>%
count(title,word) %>%
cast_sparse(title,word,n)
rating <- horror_movies$review_rating[match(rownames(movie_word_matrix),horror_movies$title)]
lasso_model <- cv.glmnet(movie_word_matrix,rating)
tidy(lasso_model$glmnet.fit) %>%
filter(lambda == lasso_model$lambda.min,
term != "(Intercept)") %>%
mutate(term = fct_reorder(term,estimate)) %>%
ggplot(aes(term,estimate,fill = estimate > 0))+
geom_col() +
coord_flip()+
theme(legend.position = "none")
horror_movies_unnested %>%
filter(!is.na(review_rating)) %>%
group_by(word) %>%
summarise(movies = n(),
avg_rating = mean(review_rating)) %>%
arrange(desc(movies)) %>%
filter(movies >= 100) %>%
mutate(word = fct_reorder(word, avg_rating)) %>%
ggplot(aes(word, avg_rating))+
geom_point() +
coord_flip()
library(broom)
tidy(lasso_model$glmnet.fit)
tidy(lasso_model$glmnet.fit) %>%
filter(lambda == lasso_model$lambda.min,
term != "(Intercept)") %>%
mutate(term = fct_reorder(term,estimate)) %>%
ggplot(aes(term,estimate,fill = estimate > 0))+
geom_col() +
coord_flip()+
theme(legend.position = "none")
movie_word_matrix <- horror_movies_unnested %>%
filter(!is.na(review_rating)) %>%
add_count(word) %>%
filter(n >= 20) %>%
count(title,word) %>%
cast_sparse(title,word,n)
rating <- horror_movies$review_rating[match(rownames(movie_word_matrix),horror_movies$title)]
lasso_model <- cv.glmnet(movie_word_matrix,rating)
tidy(lasso_model$glmnet.fit) %>%
filter(lambda == lasso_model$lambda.min,
term != "(Intercept)") %>%
mutate(term = fct_reorder(term,estimate)) %>%
ggplot(aes(term,estimate,fill = estimate > 0))+
geom_col() +
coord_flip()+
theme(legend.position = "none")
#how to the top 3 terms and bottom 3 terms change as lambda changes?
tidy(lasso_model$glmnet.fit) %>%
```
#how to the top 3 terms and bottom 3 terms change as lambda changes?
tidy(lasso_model$glmnet.fit) %>%
filter(term %in% c("teacher","unexpected","suddenly","seek","quickly","military")) %>%
ggplot(aes(lambda,estimate,color = term)) +
geom_line()
#how to the top 3 terms and bottom 3 terms change as lambda changes?
tidy(lasso_model$glmnet.fit) %>%
filter(term %in% c("teacher","unexpected","suddenly","seek","quickly","military")) %>%
ggplot(aes(lambda,estimate,color = term)) +
scale_x_log10()+
geom_line()
#how to the top 3 terms and bottom 3 terms change as lambda changes?
tidy(lasso_model$glmnet.fit) %>%
filter(term %in% c("teacher","unexpected","suddenly","seek","quickly","military")) %>%
ggplot(aes(lambda,estimate,color = term)) +
scale_x_log10()+
geom_line()+
geom_hline(yintercept = 0)
#how to the top 3 terms and bottom 3 terms change as lambda changes?
tidy(lasso_model$glmnet.fit) %>%
filter(term %in% c("teacher","unexpected","suddenly","seek","quickly","military")) %>%
ggplot(aes(lambda,estimate,color = term)) +
scale_x_log10()+
geom_line()+
geom_hline(yintercept = 0, lty = 2)
#how to the top 3 terms and bottom 3 terms change as lambda changes?
tidy(lasso_model$glmnet.fit) %>%
filter(term %in% c("teacher","unexpected","suddenly","seek","quickly","military")) %>%
ggplot(aes(lambda,estimate,color = term)) +
scale_x_log10()+
geom_line()+
geom_hline(yintercept = 0, lty = 2) +
labs(title = "Change in Term Estimate as Lambda Changes")
tidy(lasso_model$glmnet.fit) %>%
filter(lambda == lasso_model$lambda.min,
term != "(Intercept)") %>%
mutate(term = fct_reorder(term,estimate)) %>%
ggplot(aes(term,estimate,fill = estimate > 0))+
geom_col() +
coord_flip()+
theme(legend.position = "none")
#how to the top 3 terms and bottom 3 terms change as lambda changes?
tidy(lasso_model$glmnet.fit) %>%
filter(term %in% c("teacher","unexpected","suddenly","seek","quickly","military")) %>%
ggplot(aes(lambda,estimate,color = term)) +
scale_x_log10()+
geom_line()+
geom_hline(yintercept = 0, lty = 2) +
labs(title = "Change in Term Estimate as Lambda Changes")
#how to the top 3 terms and bottom 3 terms change as lambda changes?
tidy(lasso_model$glmnet.fit) %>%
filter(term %in% c("teacher","unexpected","suddenly","seek","quickly","military")) %>%
ggplot(aes(lambda,estimate,color = term)) +
scale_x_log10()+
geom_line()+
geom_hline(yintercept = 0, lty = 2) +
labs(title = "Change in Term Estimate as Lambda Changes")
tidy(lasso_model$glmnet.fit) %>%
filter(lambda == lasso_model$lambda.min,
term != "(Intercept)") %>%
mutate(term = fct_reorder(term,estimate)) %>%
ggplot(aes(term,estimate,fill = estimate > 0))+
geom_col() +
coord_flip()+
theme(legend.position = "none")
#how to the top 3 terms and bottom 3 terms change as lambda changes?
tidy(lasso_model$glmnet.fit) %>%
filter(term %in% c("teacher","unexpected","suddenly","seek","quickly","military")) %>%
ggplot(aes(lambda,estimate,color = term)) +
scale_x_log10()+
geom_line()+
geom_hline(yintercept = 0, lty = 2) +
labs(title = "Change in Term Estimate as Lambda Changes")
theme_set(white)
theme_set("white")
#how to the top 3 terms and bottom 3 terms change as lambda changes?
tidy(lasso_model$glmnet.fit) %>%
filter(term %in% c("teacher","unexpected","suddenly","seek","quickly","military")) %>%
ggplot(aes(lambda,estimate,color = term)) +
scale_x_log10()+
geom_line()+
geom_hline(yintercept = 0, lty = 2) +
labs(title = "Change in Term Estimate as Lambda Changes")
#how to the top 3 terms and bottom 3 terms change as lambda changes?
tidy(lasso_model$glmnet.fit) %>%
filter(term %in% c("teacher","unexpected","suddenly","seek","quickly","military")) %>%
ggplot(aes(lambda,estimate,color = term)) +
scale_x_log10()+
geom_line()+
geom_hline(yintercept = 0, lty = 2) +
labs(title = "Change in Term Estimate as Lambda Changes")
?theme_set
theme_set(old)
library(tidyverse)
setwd("~/Desktop/Personal Projects/Stock Regression Project")
knitr::opts_chunk$set(echo = TRUE)
library(rvest)
#overview
overview <- read_html("https://finviz.com/screener.ashx?v=112&f=cap_largeover,earningsdate_thismonth") %>%
html_nodes(".table-top-s , .table-top , .table-top-h , .screener-link-primary , .screener-link") %>%
html_text()
overview <- matrix(overview, ncol = 11,byrow = TRUE)
variables <- overview[1,]
overview <- overview[-1,]
colnames(overview) <- variables
for(i in 1:10)
{
m <- i - 1
num <- 21 + 20*m
link <- paste0("https://finviz.com/screener.ashx?v=111&f=cap_large,earningsdate_thismonth&r=",num)
over <- read_html(link) %>%
html_nodes(".table-top-s , .table-top , .table-top-h , .screener-link-primary , .screener-link") %>%
html_text()
over <- matrix(over, ncol = 11,byrow = TRUE)
variable <- over[1,]
over<- over[-1,]
colnames(over) <- variable
overview <- rbind(overview,over)
}
overview <- as_tibble(overview)
library(tidyverse)
library(rvest)
#overview
overview <- read_html("https://finviz.com/screener.ashx?v=112&f=cap_largeover,earningsdate_thismonth") %>%
html_nodes(".table-top-s , .table-top , .table-top-h , .screener-link-primary , .screener-link") %>%
html_text()
overview <- matrix(overview, ncol = 11,byrow = TRUE)
variables <- overview[1,]
overview <- overview[-1,]
colnames(overview) <- variables
for(i in 1:10)
{
m <- i - 1
num <- 21 + 20*m
link <- paste0("https://finviz.com/screener.ashx?v=111&f=cap_large,earningsdate_thismonth&r=",num)
over <- read_html(link) %>%
html_nodes(".table-top-s , .table-top , .table-top-h , .screener-link-primary , .screener-link") %>%
html_text()
over <- matrix(over, ncol = 11,byrow = TRUE)
variable <- over[1,]
over<- over[-1,]
colnames(over) <- variable
overview <- rbind(overview,over)
}
overview <- as_tibble(overview)
#technical
technical <- read_html("https://finviz.com/screener.ashx?v=171&f=cap_large,earningsdate_thismonth") %>%
html_nodes(".table-top-s , .table-top , .table-top-h , .screener-link-primary , .screener-link") %>%
html_text()
technical <- matrix(technical, ncol = 15,byrow = TRUE)
variable <- technical[1,]
technical<- technical[-1,]
colnames(technical) <- variable
for(i in 1:10)
{
m <- i - 1
num <- 21 + 20*m
link <- paste0("https://finviz.com/screener.ashx?v=171&f=cap_large,earningsdate_thismonth&r=",num)
tech <- read_html(link) %>%
html_nodes(".table-top-s , .table-top , .table-top-h , .screener-link-primary , .screener-link") %>%
html_text()
tech <- matrix(tech, ncol = 15,byrow = TRUE)
variable <- tech[1,]
tech<- tech[-1,]
colnames(tech) <- variable
technical <- rbind(technical,tech)
}
technical <- as_tibble(technical)
stocks <- left_join(overview, technical, all.x = TRUE)
colnames(stocks)
View(stocks)
write.csv(stocks, "stocks.csv", row.names = FALSE)
stocks <- read_csv("stocks.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
critic <- readr::read_tsv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-05/critic.tsv')
View(critic)
user_reviews <- readr::read_tsv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-05/user_reviews.tsv')
View(user_reviews)
setwd("~/Desktop/Personal Projects/Animal crossing")
library(tidytext)
## Cleaning the data
View(critic)
head(critic)
critic %>%
pull(plot)
critic
View(critic)
critic %>%
unnest(text, word)
critic %>%
unnest(text, word)
critic %>%
unnest(word,text)
critic %>%
unnest_tokens(word,text)
critic %>%
unnest_tokens(word,text) %>%
```
critic %>%
count(publication)
critic %>%
count(publication,sort = TRUE)
critic %>%
unnest_tokens(word,text)
critic %>%
unnest_tokens(word,text) %>%
add_count(publication)
critic %>%
unnest_tokens(word,text) %>%
add_count(publication) %>%
```
critic %>%
unnest_tokens(word,text) %>%
add_count(publication) %>%
anti_join(stop_words, by = "word")
critic_unnested <- critic %>%
unnest_tokens(word,text) %>%
add_count(publication) %>%
anti_join(stop_words, by = "word")
critic_unnested %>%
count(publication)
critic_unnested %>%
count(publication, sort = TRUE)
critic_unnested <- critic %>%
unnest_tokens(word,text) %>%
add_count(publication)
critic %>%
unnest_tokens(word,text) %>%
add_count(publication)
critic %>%
unnest_tokens(word,text) %>%
add_count(publication) %>%
anti_join(stop_words, by = "word")
critic_unnested <- critic %>%
unnest_tokens(word,text) %>%
add_count(publication) %>%
anti_join(stop_words, by = "word")
critic_unnested
critic_unnested %>%
count(word)
critic_unnested %>%
count(word, sort = TRUE)
critic_unnested
critic_unnested %>%
count(word, sort = TRUE)
#taking a look at the most viewed words
critic_unnested %>%
count(word, sort = TRUE)
#taking a look at the most viewed words
critic_unnested %>%
count(word, sort = TRUE)
critic_unnested
critic_unnested %>%
group_by(word) %>%
summarise(count = n(),
avg_rating = mean(grade))
critic_unnested %>%
group_by(word) %>%
summarise(count = n(),
avg_rating = mean(grade)) %>%
filter(count > 40)
critic_unnested %>%
group_by(word) %>%
summarise(count = n(),
avg_rating = mean(grade)) %>%
filter(count > 5)
critic_unnested %>%
group_by(word) %>%
summarise(count = n(),
avg_rating = mean(grade)) %>%
filter(count > 10)
critic_unnested %>%
group_by(word) %>%
summarise(count = n(),
avg_rating = mean(grade)) %>%
filter(count > 10) %>%
filter(word != "it's")
critic_unnested %>%
group_by(word) %>%
summarise(count = n(),
avg_rating = mean(grade)) %>%
filter(count > 10) %>%
filter(word != "it's")
critic_unnested %>%
group_by(word) %>%
summarise(count = n(),
avg_rating = mean(grade)) %>%
filter(count > 10)
critic_unnested %>%
group_by(word) %>%
summarise(count = n(),
avg_rating = mean(grade)) %>%
filter(count > 10) %>%
filter(word != "it's")
critic_unnested %>%
group_by(word) %>%
summarise(count = n(),
avg_rating = mean(grade)) %>%
filter(count > 5) %>%
filter(word != "it's")
critic_unnested %>%
group_by(word) %>%
summarise(count = n(),
avg_rating = mean(grade)) %>%
filter(count > 5) %>%
arrange(avg_rating)
critic_unnested %>%
group_by(word) %>%
summarise(count = n(),
avg_rating = mean(grade)) %>%
filter(count > 5) %>%
arrange(avg_rating, desc = TRUE)
critic_unnested %>%
group_by(word) %>%
summarise(count = n(),
avg_rating = mean(grade)) %>%
filter(count > 5) %>%
arrange(desc(avg_rating))
#taking a look at which of the words had the most positive impact on the game
View(critic_unnested %>%
group_by(word) %>%
summarise(count = n(),
avg_rating = mean(grade)) %>%
filter(count > 5) %>%
arrange(desc(avg_rating)))
critic_unnested %>%
```
critic_unnested %>%
group_by(publication) %>%
summarise(avg = mean(grade))
critic %>%
summarise(avg = mean(grade))
user_reviews %>%
summarise(avg = mean(grade))
View(user_reviews)
View(critic)
critic %>%
ggplot(aes(date,grade))+
geom_line()
critic %>%
ggplot(aes(date,grade))+
geom_point()
critic %>%
ggplot(aes(date,grade))+
geom_line()
critic %>%
group_by(date) %>%
summarise(avg_rating = mean(grade)) %>%
critic %>%
count(publication,sort = TRUE)
critic %>%
group_by(date) %>%
summarise(avg_rating = mean(grade)) %>%
ungroup() %>%
ggplot(aes(date,grade)) +
geom_line)
critic %>%
group_by(date) %>%
summarise(avg_rating = mean(grade)) %>%
ungroup() %>%
ggplot(aes(date,grade)) +
geom_line()
critic %>%
group_by(date) %>%
summarise(avg_rating = mean(grade)) %>%
ungroup() %>%
ggplot(aes(date,avg_rating)) +
geom_line()
critic %>%
group_by(date) %>%
summarise(avg_rating = mean(grade)) %>%
ungroup() %>%
ggplot(aes(date,avg_rating)) +
geom_point()
critic %>%
group_by(date) %>%
summarise(avg_rating = mean(grade)) %>%
ungroup() %>%
ggplot(aes(date,avg_rating)) +
geom_line()
critic %>%
filter(grade < 80)
critic %>%
count(publication,sort = TRUE)
